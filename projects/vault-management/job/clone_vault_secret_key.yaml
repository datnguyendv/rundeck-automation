- defaultTab: nodes
  description: Clone vault secret
  executionEnabled: true
  group: job
  multipleExecutions: true
  loglevel: INFO
  name: Clone Vault Secret
  nodeFilterEditable: false
  options:
    - name: VaultName
      description: ""
      label: Vault Name
      required: true
    - name: namespace
      description: ""
      label: Namespace
      value: default
      required: true
    - name: Action
      description: ""
      label: Action
      value: clone
      required: true
      enforced: true
      values:
        - clone
      valuesListDelimiter: ","
    - name: SourceVaultName
      description: ""
      label: Clone from
      required: true

  plugins:
    ExecutionLifecycle: {}
  scheduleEnabled: true
  sequence:
    commands:
      - description: Add vault into UI
        plugins:
          LogFilter:
            - config:
                invalidKeyPattern: \s|\$|\{|\}|\\
                logData: "false"
                name: href
                regex: href:\s*([^"]+)
                replaceFilteredResult: "false"
              type: key-value-data
            - config:
                loglevel: verbose
                matchLoglevel: normal
                quietMatch: "true"
                regex: href:\s*([^"]+)
              type: quiet-output
        autoSecureInput: "false"
        passSecureInput: "false"
        script: |
          export VAULT_ADDR="http://vault:8200"
          export EXEC_LOCATION=$HOME/projects/$RD_JOB_PROJECT
          python3 $EXEC_LOCATION/clone-vault.py
          echo "Job finished successfully."
          # python3 $EXEC_LOCATION/input-vault-key.py -i $RD_OPTION_VAULTKEY
    #   - configuration:
    #       file: /tmp/${RD_JOB_ID}/${RD_JOB_EXECUTIONUUID}/approved
    #       interval: "60"
    #       maxtry: "10"
    #     description: Waiting For Approve
    #     nodeStep: true
    #     type: nixy-waitfor-file-exists
    #   - autoSecureInput: "false"
    #     description: Finished Output
    #     passSecureInput: "false"
    #     script: |-
    #       export EXEC_LOCATION=$HOME/projects/$RD_JOB_PROJECT
    #       python3 $EXEC_LOCATION/clean-job.py --job-href @data.href@ --path /tmp/$RD_JOB_ID/$RD_JOB_EXECUTIONUUID
    #       echo "Job finished successfully."
    keepgoing: false
    strategy: node-first
