- defaultTab: nodes
  description: |-
    System Memory diagnostics.

    This job verifies the memory status and tries to free the cache.
  executionEnabled: true
  group: Use Cases/Incident Response Examples/Web Service
  id: 18a12b68-876a-46f6-ab35-1502494c900c
  loglevel: INFO
  name: Memory Diagnostics
  nodeFilterEditable: false
  nodefilters:
    dispatch:
      excludePrecedence: true
      keepgoing: false
      rankOrder: ascending
      successOnEmptyNodeFilter: false
      threadcount: '1'
    filter: 'name: ${option.filter}'
  nodesSelectedByDefault: true
  options:
  - label: Node filter
    name: filter
    value: node1
  - label: Critical disk usage (percent)
    name: critical_value
    value: '95'
  plugins:
    ExecutionLifecycle: null
  scheduleEnabled: true
  sequence:
    commands:
    - description: Friendly starting message
      exec: echo "Starting memory diagnostics..."
    - description: Memory diagnostic
      fileExtension: .sh
      interpreterArgsQuoted: false
      plugins:
        LogFilter:
        - config:
            invalidKeyPattern: \s|\$|\{|\}|\\
            logData: 'true'
            regex: ^(memory_status)=*(.+)$
          type: key-value-data
      script: |
        ###################################################################
        # 1. get total and used memory
        ###################################################################
        used=$(free -m | awk '/^Mem:/{print $3}')
        total=$(free -m | awk '/^Mem:/{print $2}')

        ###################################################################
        # 2. calculate the percentage
        ###################################################################
        let prev=$used*100
        let perc=$prev/$total

        # current memory usage
        echo "$used MB used of $total MB ($perc percent)"

        # time to check the output
        sleep 5

        ###################################################################
        # 3. memory evaluation
        ###################################################################
        if (( $perc >= @option.critical_value@ )); then
            echo "memory_status=full"
        else
            echo "memory_status=ok"
        fi
      scriptInterpreter: /bin/bash
    - description: Actions
      fileExtension: .sh
      interpreterArgsQuoted: false
      script: |-
        ###################################################################
        # 1. actions
        ###################################################################
        if [ "@data.memory_status@" = "ok" ]; then
            echo "All ok!"
        else
            echo "Memory full! Cleaning cache..."
            # sync; echo 1 > /proc/sys/vm/drop_caches # doesn't work on Docker env.
            sleep 5
            echo "Cache cleared."
        fi
      scriptInterpreter: /bin/bash
    keepgoing: false
    strategy: node-first
  uuid: 18a12b68-876a-46f6-ab35-1502494c900c

